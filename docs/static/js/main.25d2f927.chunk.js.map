{"version":3,"sources":["App.tsx","components/AgendaView.tsx","components/HomeView.tsx","components/LoginView.tsx","components/Navbar.tsx","components/WhiteboardView.tsx","components/TchatView.tsx","components/LoginApiKeyView.tsx","reportWebVitals.ts","index.tsx"],"names":["Pages","AgendaView","state","locale","enUS","handleLocaleChange","e","value","setState","fr","Container","Typography","variant","textAlign","gutterBottom","Stack","direction","gap","FormControl","component","fullWidth","FormLabel","RadioGroup","this","code","onChange","row","FormControlLabel","control","Radio","label","bearerToken","props","session","getToken","requestDomain","cloud_url","handleSelectEvent","handleSelectSlot","Component","HomeView","Divider","sx","marginBottom","username","Link","href","LoginView","handleLogin","password","a","login","cloudUrl","title","onSubmit","Navbar","handleNavChange","setPage","Paper","padding","elevation","BottomNavigation","showLabels","width","page","BottomNavigationAction","Home","icon","Agenda","Tchat","WhiteboardView","join","validated","componentWillUnmount","getWhiteboardClient","leaveRoom","canvasId","metadata","enterpriseId","getUserAgent","getEnterprise","getId","roomId","conversation_name","userToken","keyStorage","defaultTool","colors","cursorColor","TchatView","handleConvNameChange","target","alignItems","spacing","TextField","Button","onClick","disabled","length","conversationName","composer","withEmojis","apirtc","LoginApiKeyView","api_key","handleApiKeyChange","register","App","useState","setCloudUrl","useApiRTC","paddingY","FormHelperText","minHeight","getUsername","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.25d2f927.chunk.js","sourcesContent":["import { Container, Divider, FormControl, FormHelperText, Paper, Stack, TextField } from '@mui/material';\nimport { useState } from 'react';\nimport { AgendaView } from './components/AgendaView';\nimport { HomeView } from './components/HomeView';\nimport { LoginView } from './components/LoginView';\nimport { Navbar } from './components/Navbar';\nimport { TchatView } from './components/TchatView';\nimport { useApiRTC } from \"@apizee/apizee-components-alpha\"\nimport { LoginApiKeyView } from './components/LoginApiKeyView';\n\nexport enum Pages {\n  Home,\n  Agenda,\n  Tchat\n}\n\nexport function App() {\n  const [page, setPage] = useState(Pages.Home)\n  const [cloud_url, setCloudUrl] = useState(\"https://cloud.apizee.noa\")\n  const apirtc = useApiRTC(\"\")\n\n  return (\n      <Container sx={{paddingY: 5}}>\n        { !apirtc.session &&\n          <Stack direction=\"column\" alignItems=\"center\" spacing={2}>\n            <FormControl>\n              <TextField label=\"Cloud URL\" value={cloud_url} onChange={ (e) => setCloudUrl(e.target.value) }/>\n              <FormHelperText>Cloud URL input works only for username/password login method</FormHelperText>\n            </FormControl>\n            <LoginView login={apirtc.login} cloud_url={cloud_url}/>\n            <Divider/>\n            <LoginApiKeyView register={apirtc.register}/>\n          </Stack>\n        }\n        { apirtc.session && (\n          <Stack direction=\"column\" alignItems=\"center\" spacing={2}>\n            <Paper elevation={2} sx={{width: \"100%\", padding: 5, minHeight: \"70vh\"}}>\n              { page === Pages.Home && <HomeView username={apirtc.session!.getUsername()}/> }\n              { page === Pages.Agenda && <AgendaView cloud_url={cloud_url} session={apirtc.session!}/> }\n              { page === Pages.Tchat && <TchatView apirtc={apirtc}/> }\n            </Paper>\n            <Navbar page={page} setPage={setPage}/>\n          </Stack>\n        ) }\n      </Container>\n    )\n}","import { Session } from \"@apizee/apirtc\";\nimport { Agenda } from \"@apizee/apizee-components-alpha\";\nimport { Container, FormControl, FormControlLabel, FormLabel, Radio, RadioGroup, Stack, Typography } from \"@mui/material\";\nimport { Locale } from \"date-fns\";\nimport { enUS, fr } from \"date-fns/locale\";\nimport { ChangeEvent, Component } from \"react\";\n\ninterface IProps {\n    cloud_url: string,\n    session: Session\n}\n\ninterface IState {\n    locale: Locale\n}\n\nexport class AgendaView extends Component<IProps, IState> {\n    state = {\n        locale: enUS\n    }\n\n    handleLocaleChange = (e: ChangeEvent<HTMLInputElement>, value: string) => {\n        switch (value) {\n            case \"en-US\":\n                this.setState({locale: enUS})\n                break;\n        \n            case \"fr\":\n                this.setState({locale: fr})\n                break;\n        }\n    }\n\n    render() {\n        return (\n            <Container>\n                <Typography variant=\"h2\" textAlign=\"center\" gutterBottom>Agenda</Typography>\n                <Stack direction=\"row\" gap={2}>\n                    <FormControl component=\"fieldset\" fullWidth>\n                        <FormLabel>Locale</FormLabel>\n                        <RadioGroup value={this.state.locale.code} onChange={this.handleLocaleChange} row>\n                            <FormControlLabel control={<Radio/>} value=\"en-US\" label=\"🇬🇧 English\"/>\n                            <FormControlLabel control={<Radio/>} value=\"fr\" label=\"🇫🇷 Français\"/>\n                        </RadioGroup>\n                    </FormControl>\n                </Stack>\n                <Agenda\n                    locale={this.state.locale}\n                    bearerToken={this.props.session.getToken()}\n                    requestDomain={this.props.cloud_url}\n                    handleSelectEvent={()=>''}\n                    handleSelectSlot={()=>''}\n                />\n            </Container>\n        )\n    }\n}","import { Container, Divider, Link, Typography } from \"@mui/material\"\nimport { Component } from \"react\"\n\ninterface IProps {\n    username: string\n}\n\nexport class HomeView extends Component<IProps> {\n    render() {\n        return (\n            <Container>\n                <Typography variant=\"h2\" textAlign=\"center\" gutterBottom>Home</Typography>\n                <Divider sx={{marginBottom: 5}}/>\n                <Typography variant=\"body1\" textAlign=\"center\" gutterBottom>Welcome <b>{this.props.username}</b> to the ApiRTC's React component demo page.</Typography>\n                <Typography variant=\"body1\">The purpose of this website is to put on the stage Components already used in ApiRTC's products. You just have to select an app in the navbar bellow to get started. <em>Also you can dig deeper by looking at the <Link href=\"https://www.apizee.com/inte/storybook-apizee-components-alpha/\">Storybook</Link></em></Typography>\n            </Container>\n        )\n    }\n}","import { RegisterInformation } from \"@apizee/apirtc\";\nimport { LoginForm } from \"@apizee/apizee-components-alpha\";\nimport { Component } from \"react\";\n\ninterface IProps {\n    cloud_url: string,\n    login: (username: string, password: string, opts?: RegisterInformation | undefined) => Promise<void>\n}\n\nexport class LoginView extends Component<IProps> {\n    handleLogin = async (username: string, password: string): Promise<any> => {\n        await this.props.login(username, password, {\n            cloudUrl: this.props.cloud_url\n        })\n    }\n\n    render() {\n        return (\n            <LoginForm title=\"Demo App\" onSubmit={this.handleLogin}/>\n        )\n    }\n}","import { IconCalendar, IconChatFull, IconHome } from \"@apizee/apizee-components-alpha\";\nimport { BottomNavigation, BottomNavigationAction, Paper } from \"@mui/material\";\nimport { Component, SyntheticEvent } from \"react\";\nimport { Pages } from \"../App\";\n\ninterface IProps {\n    page: Pages,\n    setPage: Function\n}\n\nexport class Navbar extends Component<IProps, {}> {\n\n    handleNavChange = (e: SyntheticEvent<Element, Event>, value: any) => {\n        this.props.setPage(value)\n    }\n\n    render() {\n        return (\n            <Paper sx={{padding: 2}} elevation={5}>\n                <BottomNavigation showLabels sx={{ width: 500 }} value={this.props.page} onChange={this.handleNavChange}>\n                    <BottomNavigationAction\n                        label=\"Home\"\n                        value={Pages.Home}\n                        icon={<IconHome />}\n                    />\n                    <BottomNavigationAction\n                        label=\"Agenda\"\n                        value={Pages.Agenda}\n                        icon={<IconCalendar />}\n                    />\n                    <BottomNavigationAction\n                        label=\"Tchat\"\n                        value={Pages.Tchat}\n                        icon={<IconChatFull />}\n                    />\n                </BottomNavigation>\n            </Paper>\n        )\n    }\n}","import { Session } from \"@apizee/apirtc\"\nimport { Whiteboard } from \"@apizee/apizee-components-alpha\"\nimport { Container } from \"@mui/material\"\nimport { Component } from \"react\"\n\ninterface IProps {\n    conversation_name: string,\n    session: Session\n}\n\nexport class WhiteboardView extends Component<IProps> {\n\n    join = () => {\n        this.setState({validated: true})\n    }\n\n    componentWillUnmount = () => {\n        //  Leave the room on unmount\n        if(this.props.session.getWhiteboardClient()) this.props.session.getWhiteboardClient().leaveRoom()\n    }\n\n    render() {\n        return (\n            <Container>\n                <Whiteboard canvasId=\"whiteboard\" metadata={{\n                    enterpriseId: this.props.session.getUserAgent().getEnterprise().getId(),\n                    roomId: this.props.conversation_name,\n                    userToken: this.props.session.getToken(),\n                    keyStorage: `${this.props.conversation_name}-key`,\n                    defaultTool: \"void\",\n                    colors: [\"red\", \"green\", \"blue\", \"yellow\"],\n                    cursorColor: \"purple\"\n                }} />\n            </Container>\n        )\n    }\n}","import { Chat } from \"@apizee/apizee-components-alpha\";\nimport { Container, FormControl, Typography, TextField, Button, Stack } from \"@mui/material\";\nimport { ChangeEvent, Component } from \"react\";\nimport { WhiteboardView } from \"./WhiteboardView\";\n\ninterface IProps {\n    apirtc: any\n}\n\ninterface IState {\n    conversation_name: string,\n    validated: boolean\n}\n\nexport class TchatView extends Component<IProps, IState> {\n    state = {\n        conversation_name: '',\n        validated: false\n    }\n\n    handleConvNameChange = (e: ChangeEvent<HTMLInputElement>) => {\n        this.setState({conversation_name: e.target.value})\n    }\n\n    join = () => {\n        this.setState({validated: true})\n    }\n\n    render() {\n        return (\n            <Container>\n                <Typography variant=\"h2\" textAlign=\"center\" gutterBottom>Tchat</Typography>\n                { !this.state.validated && \n                    <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                        <FormControl>\n                            <TextField label=\"Conversation name\" value={this.state.conversation_name} onChange={this.handleConvNameChange}/>\n                        </FormControl>\n                        <Button variant=\"contained\" onClick={this.join} disabled={this.state.conversation_name.length <= 0}>Join</Button>\n                    </Stack>\n                }\n                { this.state.validated && \n                    <Stack direction=\"row\" gap={1}>\n                        <Chat conversationName={this.state.conversation_name} composer={{ withEmojis: true }}/>\n                        { this.props.apirtc.session!.getUserAgent().getEnterprise() !== null &&\n                            <WhiteboardView conversation_name={this.state.conversation_name} session={this.props.apirtc.session!}/>\n                        }\n                    </Stack>\n                }\n            </Container>\n        )\n    }\n}","import { Button, FormControl, Stack, TextField } from \"@mui/material\";\nimport { ChangeEvent, Component } from \"react\";\n\ninterface IProps {\n    register: (apiKey: string) => Promise<void>\n}\n\ninterface IState {\n    api_key: string\n}\n\nexport class LoginApiKeyView extends Component<IProps, IState> {\n    state = {\n        api_key: ''\n    }\n\n    handleApiKeyChange = (e: ChangeEvent<HTMLInputElement>) => {\n        this.setState({api_key: e.target.value})\n    }\n\n    handleLogin = () => {\n        this.props.register(this.state.api_key)\n    }\n\n    render() {\n        return (\n            <Stack direction=\"row\" spacing={2}>\n                <FormControl fullWidth>\n                    <TextField label=\"API Key\" value={this.state.api_key} onChange={this.handleApiKeyChange}/>\n                </FormControl>\n                <Button variant=\"contained\" onClick={this.handleLogin} disabled={this.state.api_key.length <= 0}>Login</Button>\n            </Stack>\n        )\n    }\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}